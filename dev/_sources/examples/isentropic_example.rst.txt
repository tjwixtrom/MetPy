.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_isentropic_example.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_isentropic_example.py:


===================
Isentropic Analysis
===================

The MetPy function `mpcalc.isentropic_interpolation` allows for isentropic analysis from model
analysis data in isobaric coordinates.


.. code-block:: default

    import cartopy.crs as ccrs
    import cartopy.feature as cfeature
    import matplotlib.pyplot as plt
    import numpy as np
    import xarray as xr

    import metpy.calc as mpcalc
    from metpy.cbook import get_test_data
    from metpy.plots import add_metpy_logo, add_timestamp
    from metpy.units import units








**Getting the data**

In this example, [NARR reanalysis data](
https://www.ncdc.noaa.gov/data-access/model-data/model-datasets/north-american-regional-reanalysis-narr)
for 18 UTC 04 April 1987 from the National Centers for Environmental Information will be
used.


.. code-block:: default


    data = xr.open_dataset(get_test_data('narr_example.nc', False))









.. code-block:: default

    print(list(data.variables))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ['Temperature', 'time', 'isobaric', 'y', 'x', 'Lambert_Conformal', 'lat', 'lon', 'u_wind', 'v_wind', 'Geopotential_height', 'Specific_humidity']




We will reduce the dimensionality of the data as it is pulled in to remove an empty time
dimension, as well as add longitude and latitude as coordinates (instead of data variables).


.. code-block:: default


    data = data.squeeze().set_coords(['lon', 'lat'])








To properly interpolate to isentropic coordinates, the function must know the desired output
isentropic levels. An array with these levels will be created below.


.. code-block:: default


    isentlevs = [296.] * units.kelvin








**Conversion to Isentropic Coordinates**

Once three dimensional data in isobaric coordinates has been pulled and the desired
isentropic levels created, the conversion to isentropic coordinates can begin. Data will be
passed to the function as below. The function requires that isentropic levels, as well as a
DataArray of temperature on isobaric coordinates be input. Any additional inputs (in this
case specific humidity, geopotential height, and u and v wind components) will be
logarithmicaly interpolated to isentropic space.


.. code-block:: default


    isent_data = mpcalc.isentropic_interpolation_as_dataset(
        isentlevs,
        data['Temperature'],
        data['u_wind'],
        data['v_wind'],
        data['Specific_humidity'],
        data['Geopotential_height']
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /opt/hostedtoolcache/Python/3.8.6/x64/lib/python3.8/site-packages/metpy/interpolate/one_dimension.py:147: UserWarning: Interpolation point out of data bounds encountered
      warnings.warn('Interpolation point out of data bounds encountered')




The output is an xarray Dataset:


.. code-block:: default


    isent_data






.. raw:: html

    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme=dark],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1F1F1F;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 20px 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: none;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: '►';
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: '▼';
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: '(';
    }

    .xr-dim-list:after {
      content: ')';
    }

    .xr-dim-list li:not(:last-child):after {
      content: ',';
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt, dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2 {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt;
    Dimensions:              (isentropic_level: 1, x: 292, y: 118)
    Coordinates:
      * isentropic_level     (isentropic_level) float64 296.0
        time                 datetime64[ns] 1987-04-04T18:00:00
      * y                    (y) float64 -3.087e+03 -3.054e+03 ... 678.9 711.4
      * x                    (x) float64 -3.977e+03 -3.945e+03 ... 5.47e+03
        lon                  (y, x) float64 -140.0 -139.7 -139.5 ... -42.28 -42.07
        lat                  (y, x) float64 16.07 16.18 16.28 ... 34.22 34.0 33.79
    Data variables:
        pressure             (isentropic_level, y, x) float64 &lt;Quantity([[[900.29...
        temperature          (isentropic_level, y, x) float64 &lt;Quantity([[[287.25...
        u_wind               (isentropic_level, y, x) float64 &lt;Quantity([[[-1.319...
        v_wind               (isentropic_level, y, x) float64 &lt;Quantity([[[ 0.061...
        Specific_humidity    (isentropic_level, y, x) float64 &lt;Quantity([[[0.0088...
        Geopotential_height  (isentropic_level, y, x) float64 &lt;Quantity([[[1064.1...</pre><div class='xr-wrap' hidden><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-713bb908-c8c1-4da7-b82a-66009e27b194' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-713bb908-c8c1-4da7-b82a-66009e27b194' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>isentropic_level</span>: 1</li><li><span class='xr-has-index'>x</span>: 292</li><li><span class='xr-has-index'>y</span>: 118</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-80d0272e-d21d-4821-a801-8a03ec7dd4b4' class='xr-section-summary-in' type='checkbox'  checked><label for='section-80d0272e-d21d-4821-a801-8a03ec7dd4b4' class='xr-section-summary' >Coordinates: <span>(6)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>isentropic_level</span></div><div class='xr-var-dims'>(isentropic_level)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>296.0</div><input id='attrs-35b6261b-9eba-4599-9524-7b2a201c0a5d' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-35b6261b-9eba-4599-9524-7b2a201c0a5d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ca4d68a1-941a-4201-b85f-b6b60eed0ea5' class='xr-var-data-in' type='checkbox'><label for='data-ca4d68a1-941a-4201-b85f-b6b60eed0ea5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>kelvin</dd><dt><span>positive :</span></dt><dd>up</dd></dl></div><div class='xr-var-data'><pre>array([296.])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>time</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1987-04-04T18:00:00</div><input id='attrs-298cc666-a8c9-42f9-84c8-b5ad481e2322' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-298cc666-a8c9-42f9-84c8-b5ad481e2322' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6d91a9c8-ec99-4faf-a795-4063b955bbb0' class='xr-var-data-in' type='checkbox'><label for='data-6d91a9c8-ec99-4faf-a795-4063b955bbb0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>forecast time</dd><dt><span>_CoordinateAxisType :</span></dt><dd>Time</dd><dt><span>_metpy_axis :</span></dt><dd>time</dd></dl></div><div class='xr-var-data'><pre>array(&#x27;1987-04-04T18:00:00.000000000&#x27;, dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.087e+03 -3.054e+03 ... 711.4</div><input id='attrs-58c0d920-b873-4668-a298-2bf1357739a2' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-58c0d920-b873-4668-a298-2bf1357739a2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0efc941a-91d8-4b9b-ab59-63ce982edeba' class='xr-var-data-in' type='checkbox'><label for='data-0efc941a-91d8-4b9b-ab59-63ce982edeba' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>km</dd><dt><span>long_name :</span></dt><dd>y coordinate of projection</dd><dt><span>standard_name :</span></dt><dd>projection_y_coordinate</dd><dt><span>grid_spacing :</span></dt><dd>32.463 km</dd><dt><span>_CoordinateAxisType :</span></dt><dd>GeoY</dd><dt><span>_metpy_axis :</span></dt><dd>y</dd></dl></div><div class='xr-var-data'><pre>array([-3.086806e+03, -3.054343e+03, -3.021880e+03, -2.989417e+03,
           -2.956954e+03, -2.924491e+03, -2.892028e+03, -2.859565e+03,
           -2.827102e+03, -2.794639e+03, -2.762176e+03, -2.729713e+03,
           -2.697250e+03, -2.664787e+03, -2.632324e+03, -2.599861e+03,
           -2.567398e+03, -2.534935e+03, -2.502472e+03, -2.470009e+03,
           -2.437546e+03, -2.405083e+03, -2.372620e+03, -2.340157e+03,
           -2.307694e+03, -2.275231e+03, -2.242768e+03, -2.210305e+03,
           -2.177842e+03, -2.145379e+03, -2.112916e+03, -2.080453e+03,
           -2.047990e+03, -2.015527e+03, -1.983064e+03, -1.950601e+03,
           -1.918138e+03, -1.885675e+03, -1.853212e+03, -1.820749e+03,
           -1.788286e+03, -1.755823e+03, -1.723360e+03, -1.690897e+03,
           -1.658434e+03, -1.625971e+03, -1.593508e+03, -1.561045e+03,
           -1.528582e+03, -1.496119e+03, -1.463656e+03, -1.431193e+03,
           -1.398730e+03, -1.366267e+03, -1.333804e+03, -1.301341e+03,
           -1.268878e+03, -1.236415e+03, -1.203952e+03, -1.171489e+03,
           -1.139026e+03, -1.106563e+03, -1.074100e+03, -1.041637e+03,
           -1.009174e+03, -9.767106e+02, -9.442476e+02, -9.117846e+02,
           -8.793216e+02, -8.468586e+02, -8.143956e+02, -7.819326e+02,
           -7.494696e+02, -7.170066e+02, -6.845436e+02, -6.520806e+02,
           -6.196176e+02, -5.871546e+02, -5.546916e+02, -5.222286e+02,
           -4.897656e+02, -4.573026e+02, -4.248396e+02, -3.923766e+02,
           -3.599136e+02, -3.274506e+02, -2.949876e+02, -2.625246e+02,
           -2.300616e+02, -1.975986e+02, -1.651356e+02, -1.326726e+02,
           -1.002096e+02, -6.774665e+01, -3.528365e+01, -2.820646e+00,
            2.964235e+01,  6.210535e+01,  9.456835e+01,  1.270314e+02,
            1.594944e+02,  1.919574e+02,  2.244204e+02,  2.568834e+02,
            2.893464e+02,  3.218094e+02,  3.542724e+02,  3.867354e+02,
            4.191984e+02,  4.516614e+02,  4.841244e+02,  5.165874e+02,
            5.490504e+02,  5.815134e+02,  6.139764e+02,  6.464394e+02,
            6.789024e+02,  7.113654e+02])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.977e+03 -3.945e+03 ... 5.47e+03</div><input id='attrs-8692cfd2-5865-4c15-9ea2-8a397ed54652' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-8692cfd2-5865-4c15-9ea2-8a397ed54652' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d5b88c9b-1be3-4352-a9c2-72dbe55c5b88' class='xr-var-data-in' type='checkbox'><label for='data-d5b88c9b-1be3-4352-a9c2-72dbe55c5b88' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>km</dd><dt><span>long_name :</span></dt><dd>x coordinate of projection</dd><dt><span>standard_name :</span></dt><dd>projection_x_coordinate</dd><dt><span>grid_spacing :</span></dt><dd>32.463 km</dd><dt><span>_CoordinateAxisType :</span></dt><dd>GeoX</dd><dt><span>_metpy_axis :</span></dt><dd>x</dd></dl></div><div class='xr-var-data'><pre>array([-3977.054864, -3944.591864, -3912.128864, ...,  5404.752136,
            5437.215136,  5469.678136])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>lon</span></div><div class='xr-var-dims'>(y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-140.0 -139.7 ... -42.28 -42.07</div><input id='attrs-ba55a2b3-6247-4fda-9ef3-e28449e259d4' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ba55a2b3-6247-4fda-9ef3-e28449e259d4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-af06c273-6022-48da-84b5-fae002cf1b5d' class='xr-var-data-in' type='checkbox'><label for='data-af06c273-6022-48da-84b5-fae002cf1b5d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>long_name :</span></dt><dd>longitude coordinate</dd><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>_CoordinateAxisType :</span></dt><dd>Lon</dd><dt><span>_metpy_axis :</span></dt><dd>longitude</dd></dl></div><div class='xr-var-data'><pre>array([[-139.97117095, -139.73522721, -139.49858484, ...,  -64.35749184,
             -64.15372575,  -63.95067327],
           [-140.08267249, -139.84614797, -139.60891866, ...,  -64.2262598 ,
             -64.02216852,  -63.81879588],
           [-140.19488041, -139.95777355, -139.71995565, ...,  -64.09430835,
             -63.88989264,  -63.68620064],
           ...,
           [-159.55351442, -159.25140091, -158.94722352, ...,  -43.0210353 ,
             -42.79937066,  -42.57921675],
           [-159.80950657, -159.50704632, -159.20250294, ...,  -42.76430663,
             -42.54286616,  -42.32294379],
           [-160.06757036, -159.76477488, -159.45987691, ...,  -42.50604802,
             -42.28484357,  -42.06516454]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>lat</span></div><div class='xr-var-dims'>(y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>16.07 16.18 16.28 ... 34.0 33.79</div><input id='attrs-baa598f3-52fc-4ab1-9694-6c290b0c3cff' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-baa598f3-52fc-4ab1-9694-6c290b0c3cff' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-329f82e6-e5e6-4052-a5ba-29663bf55c56' class='xr-var-data-in' type='checkbox'><label for='data-329f82e6-e5e6-4052-a5ba-29663bf55c56' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>long_name :</span></dt><dd>latitude coordinate</dd><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>_CoordinateAxisType :</span></dt><dd>Lat</dd><dt><span>_metpy_axis :</span></dt><dd>latitude</dd></dl></div><div class='xr-var-data'><pre>array([[16.07179382, 16.17829321, 16.28417555, ..., 10.85897094,
            10.73025246, 10.60116163],
           [16.29832737, 16.40537815, 16.51180952, ..., 11.05953224,
            10.93019697, 10.80048872],
           [16.52515392, 16.63275861, 16.73974154, ..., 11.26027745,
            11.13032304, 10.99999503],
           ...,
           [42.71917824, 42.90608544, 43.09216334, ..., 33.85033043,
            33.63757777, 33.42448349],
           [42.94011162, 43.12785995, 43.31477863, ..., 34.03476205,
            33.82120554, 33.60730909],
           [43.16049685, 43.34908824, 43.53684968, ..., 34.21860642,
            34.00424607, 33.78954748]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-a5c9bd5c-36f5-4d13-91d4-4d5cbf8e0baa' class='xr-section-summary-in' type='checkbox'  checked><label for='section-a5c9bd5c-36f5-4d13-91d4-4d5cbf8e0baa' class='xr-section-summary' >Data variables: <span>(6)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>pressure</span></div><div class='xr-var-dims'>(isentropic_level, y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>&lt;Quantity([[[900.2919523  900.58...</div><input id='attrs-37e8d8b6-ca4f-4556-86d0-ce712f8d8bca' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-37e8d8b6-ca4f-4556-86d0-ce712f8d8bca' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-03efa5b9-8af2-4728-bd0c-549917a71f39' class='xr-var-data-in' type='checkbox'><label for='data-03efa5b9-8af2-4728-bd0c-549917a71f39' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>air_pressure</dd></dl></div><div class='xr-var-data'><table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[[[900.2919522985181 900.5802197708609 902.6483979351618 ... nan nan nan]<br>  [898.7129843896638 899.3425743331497 901.092417580231 ... nan nan nan]<br>  [893.3642760865143 894.613665430005 896.9170732752798 ... nan nan nan]<br>  ...<br>  [582.1526932891076 574.8181680538501 567.4370891876287 ...<br>   802.7521736042729 803.5874571679083 804.4990987574777]<br>  [578.3941822860379 570.6639383375534 562.9649092821677 ...<br>   805.0103474001498 804.6822945107394 806.4915037567607]<br>  [574.3665383465342 566.2580113390201 558.3126571553375 ...<br>   806.1994526442442 805.4907915387515 802.5986482909411]]]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>hectopascal</td></tr></tbody></table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>temperature</span></div><div class='xr-var-dims'>(isentropic_level, y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>&lt;Quantity([[[287.25145651 287.27...</div><input id='attrs-6b727687-8869-4dd9-b568-d9e2378b78d3' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6b727687-8869-4dd9-b568-d9e2378b78d3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ba0c9b24-4801-43e5-827f-9a0dcc9d5b4e' class='xr-var-data-in' type='checkbox'><label for='data-ba0c9b24-4801-43e5-827f-9a0dcc9d5b4e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>air_temperature</dd></dl></div><div class='xr-var-data'><table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[[[287.2514565076607 287.27772459399773 287.4660093519115 ... nan nan<br>   nan]<br>  [287.1074679401313 287.1649028839584 287.32438329528003 ... nan nan<br>   nan]<br>  [286.61836377620045 286.73279907033344 286.9434761423399 ... nan nan<br>   nan]<br>  ...<br>  [253.6175132775013 252.7006975305383 251.76958663666392 ...<br>   277.99522527100817 278.0778161379934 278.16788714275737]<br>  [253.1487368075115 252.17770639442932 251.2012118704078 ...<br>   278.2183670595457 278.18597824791044 278.36448502587524]<br>  [252.6439712955945 251.62004772702602 250.60651817752802 ...<br>   278.3356889928704 278.26578451687783 277.9800383723407]]]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>kelvin</td></tr></tbody></table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>u_wind</span></div><div class='xr-var-dims'>(isentropic_level, y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>&lt;Quantity([[[-1.31931644e+01 -1....</div><input id='attrs-d5e5fd91-26d8-48da-a7a8-381d55480e53' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-d5e5fd91-26d8-48da-a7a8-381d55480e53' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ed23becc-09d1-4157-a174-e7ff03ef4259' class='xr-var-data-in' type='checkbox'><label for='data-ed23becc-09d1-4157-a174-e7ff03ef4259' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>m/s</dd><dt><span>long_name :</span></dt><dd>u_wind @ isobaric</dd><dt><span>grid_mapping :</span></dt><dd>Lambert_Conformal</dd><dt><span>GRIB_param_name :</span></dt><dd>u_wind</dd><dt><span>GRIB_param_short_name :</span></dt><dd>UGRD</dd><dt><span>GRIB_center_id :</span></dt><dd>7</dd><dt><span>GRIB_table_id :</span></dt><dd>131</dd><dt><span>GRIB_param_number :</span></dt><dd>33</dd><dt><span>GRIB_param_id :</span></dt><dd>[  1   7 131  33]</dd><dt><span>GRIB_product_definition_type :</span></dt><dd>Initialized analysis product</dd><dt><span>GRIB_level_type :</span></dt><dd>100</dd><dt><span>GRIB_VectorComponentFlag :</span></dt><dd>gridRelative</dd></dl></div><div class='xr-var-data'><table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[[[-13.193164392909315 -13.655823973009236 -13.559169146381219 ... nan<br>   nan nan]<br>  [-13.153204715345122 -12.987403164266022 -13.337469746516607 ... nan<br>   nan nan]<br>  [-12.389549338067146 -12.846205378125791 -12.397109507491788 ... nan<br>   nan nan]<br>  ...<br>  [16.33632535433306 16.263436813532586 16.283203681873204 ...<br>   0.4353531776490933 0.4347628950874133 0.7821320008945161]<br>  [15.936914101778282 15.994473585648613 16.406279793420875 ...<br>   -0.3225646712172444 -0.007750593994907212 -0.7117360691690512]<br>  [15.454470081276087 16.05019437977718 16.11932505076035 ...<br>   -1.6882434743535581 -1.405006451101424 -0.659849963488667]]]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>meter/second</td></tr></tbody></table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>v_wind</span></div><div class='xr-var-dims'>(isentropic_level, y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>&lt;Quantity([[[ 0.06178779  0.0715...</div><input id='attrs-3b4fb560-c295-4702-9a3c-3421e25cd32c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-3b4fb560-c295-4702-9a3c-3421e25cd32c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-76d27b9e-64e8-4c50-b979-d128fc2c0cce' class='xr-var-data-in' type='checkbox'><label for='data-76d27b9e-64e8-4c50-b979-d128fc2c0cce' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>m/s</dd><dt><span>long_name :</span></dt><dd>v_wind @ isobaric</dd><dt><span>grid_mapping :</span></dt><dd>Lambert_Conformal</dd><dt><span>GRIB_param_name :</span></dt><dd>v_wind</dd><dt><span>GRIB_param_short_name :</span></dt><dd>VGRD</dd><dt><span>GRIB_center_id :</span></dt><dd>7</dd><dt><span>GRIB_table_id :</span></dt><dd>131</dd><dt><span>GRIB_param_number :</span></dt><dd>34</dd><dt><span>GRIB_param_id :</span></dt><dd>[  1   7 131  34]</dd><dt><span>GRIB_product_definition_type :</span></dt><dd>Initialized analysis product</dd><dt><span>GRIB_level_type :</span></dt><dd>100</dd><dt><span>GRIB_VectorComponentFlag :</span></dt><dd>gridRelative</dd></dl></div><div class='xr-var-data'><table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[[[0.06178779260760825 0.07150297855439991 -0.17279658368628903 ... nan<br>   nan nan]<br>  [1.113697999520523 2.2462724579163336 1.0882727778949874 ... nan nan<br>   nan]<br>  [2.858375077213822 1.8750548594894516 2.986819129037231 ... nan nan<br>   nan]<br>  ...<br>  [9.608730758928154 9.175615097262908 8.182618380804131 ...<br>   -3.1921702639784493 -3.201004431767289 -2.734779465817324]<br>  [9.725457598948612 8.737032992985418 8.59132087469072 ...<br>   -2.90017108653023 -2.473973015468163 -1.4868335305893574]<br>  [9.746794309296456 9.145498463518706 8.760766686783304 ...<br>   -1.658174415507119 -1.2229820360912005 -1.4800439768336129]]]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>meter/second</td></tr></tbody></table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Specific_humidity</span></div><div class='xr-var-dims'>(isentropic_level, y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>&lt;Quantity([[[0.00884149 0.008866...</div><input id='attrs-c855c3e9-5160-4276-95de-c1e03a43f628' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-c855c3e9-5160-4276-95de-c1e03a43f628' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6cfa3f1b-103b-4b05-8b5a-9d3ebe8cc349' class='xr-var-data-in' type='checkbox'><label for='data-6cfa3f1b-103b-4b05-8b5a-9d3ebe8cc349' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>kg/kg</dd><dt><span>long_name :</span></dt><dd>Specific_humidity @ isobaric</dd><dt><span>grid_mapping :</span></dt><dd>Lambert_Conformal</dd><dt><span>GRIB_param_name :</span></dt><dd>Specific_humidity</dd><dt><span>GRIB_param_short_name :</span></dt><dd>SPFH</dd><dt><span>GRIB_center_id :</span></dt><dd>7</dd><dt><span>GRIB_table_id :</span></dt><dd>131</dd><dt><span>GRIB_param_number :</span></dt><dd>51</dd><dt><span>GRIB_param_id :</span></dt><dd>[  1   7 131  51]</dd><dt><span>GRIB_product_definition_type :</span></dt><dd>Initialized analysis product</dd><dt><span>GRIB_level_type :</span></dt><dd>100</dd><dt><span>GRIB_VectorComponentFlag :</span></dt><dd>gridRelative</dd></dl></div><div class='xr-var-data'><table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[[[0.008841493974592714 0.008866961795519063 0.00896765782437646 ... nan<br>   nan nan]<br>  [0.008816664925242851 0.008826337613442623 0.008906260597240975 ...<br>   nan nan nan]<br>  [0.00870216212217569 0.008732074517460262 0.008790260529269508 ... nan<br>   nan nan]<br>  ...<br>  [0.001101931052746033 0.0010145547655939185 0.0009273271042280353 ...<br>   0.005120021693024412 0.005144158827862515 0.00517016785431279]<br>  [0.0010571093994786146 0.0009669273469059391 0.0008802146120083024 ...<br>   0.005130342646080268 0.005145021630590894 0.005187276604334979]<br>  [0.0010102997302521366 0.0009198100877457649 0.0008339632837022626 ...<br>   0.005117316618701939 0.005117133120544202 0.0050881427571716365]]]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>dimensionless</td></tr></tbody></table></div></li><li class='xr-var-item'><div class='xr-var-name'><span>Geopotential_height</span></div><div class='xr-var-dims'>(isentropic_level, y, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>&lt;Quantity([[[1064.12539395 1061....</div><input id='attrs-c2d45a7e-9275-42fc-a835-ccda9627b9f8' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-c2d45a7e-9275-42fc-a835-ccda9627b9f8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-22611a60-4e0b-4e49-9988-d391557f418f' class='xr-var-data-in' type='checkbox'><label for='data-22611a60-4e0b-4e49-9988-d391557f418f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>gpm</dd><dt><span>long_name :</span></dt><dd>Geopotential_height @ isobaric</dd><dt><span>grid_mapping :</span></dt><dd>Lambert_Conformal</dd><dt><span>GRIB_param_name :</span></dt><dd>Geopotential_height</dd><dt><span>GRIB_param_short_name :</span></dt><dd>HGT</dd><dt><span>GRIB_center_id :</span></dt><dd>7</dd><dt><span>GRIB_table_id :</span></dt><dd>131</dd><dt><span>GRIB_param_number :</span></dt><dd>7</dd><dt><span>GRIB_param_id :</span></dt><dd>[  1   7 131   7]</dd><dt><span>GRIB_product_definition_type :</span></dt><dd>Initialized analysis product</dd><dt><span>GRIB_level_type :</span></dt><dd>100</dd><dt><span>GRIB_VectorComponentFlag :</span></dt><dd>gridRelative</dd></dl></div><div class='xr-var-data'><table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[[[1064.1253939502908 1061.8953974431201 1041.9359219841501 ... nan nan<br>   nan]<br>  [1079.9747371533851 1074.055713030707 1058.0760758222393 ... nan nan<br>   nan]<br>  [1130.7502395939869 1119.4835884345273 1097.8772217396272 ... nan nan<br>   nan]<br>  ...<br>  [4298.676435322169 4392.565366283005 4487.814853357783 ...<br>   1938.873289790764 1929.862994141398 1920.0903719140833]<br>  [4339.811031609328 4439.538905649793 4539.743332862763 ...<br>   1915.8988399817863 1918.2045351507456 1899.2954424576365]<br>  [4384.740800310538 4490.09480851343 4593.562392525013 ...<br>   1904.3064075194775 1910.4813085824437 1938.9691610036139]]]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>meter</td></tr></tbody></table></div></li></ul></div></li><li class='xr-section-item'><input id='section-93c04b92-41e7-4f6d-8ccc-749fe5b83162' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-93c04b92-41e7-4f6d-8ccc-749fe5b83162' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    <br />
    <br />

Note that the units on our wind variables are not ideal for plotting. Instead, let us
convert them to more appropriate values.


.. code-block:: default


    isent_data['u_wind'] = isent_data['u_wind'].metpy.convert_units('kt')
    isent_data['v_wind'] = isent_data['v_wind'].metpy.convert_units('kt')








**Converting to Relative Humidity**

The NARR only gives specific humidity on isobaric vertical levels, so relative humidity will
have to be calculated after the interpolation to isentropic space.


.. code-block:: default


    isent_data['Relative_humidity'] = mpcalc.relative_humidity_from_specific_humidity(
        isent_data['pressure'],
        isent_data['temperature'],
        isent_data['Specific_humidity']
    ).metpy.convert_units('percent')








**Plotting the Isentropic Analysis**


.. code-block:: default


    # Set up our projection and coordinates
    crs = ccrs.LambertConformal(central_longitude=-100.0, central_latitude=45.0)
    lon = isent_data['pressure'].metpy.longitude
    lat = isent_data['pressure'].metpy.latitude

    # Coordinates to limit map area
    bounds = [(-122., -75., 25., 50.)]
    # Choose a level to plot, in this case 296 K (our sole level in this example)
    level = 0

    fig = plt.figure(figsize=(17., 12.))
    add_metpy_logo(fig, 120, 245, size='large')
    ax = fig.add_subplot(1, 1, 1, projection=crs)
    ax.set_extent(*bounds, crs=ccrs.PlateCarree())
    ax.add_feature(cfeature.COASTLINE.with_scale('50m'), linewidth=0.75)
    ax.add_feature(cfeature.STATES, linewidth=0.5)

    # Plot the surface
    clevisent = np.arange(0, 1000, 25)
    cs = ax.contour(lon, lat, isent_data['pressure'].isel(isentropic_level=level),
                    clevisent, colors='k', linewidths=1.0, linestyles='solid',
                    transform=ccrs.PlateCarree())
    cs.clabel(fontsize=10, inline=1, inline_spacing=7, fmt='%i', rightside_up=True,
              use_clabeltext=True)

    # Plot RH
    cf = ax.contourf(lon, lat, isent_data['Relative_humidity'].isel(isentropic_level=level),
                     range(10, 106, 5), cmap=plt.cm.gist_earth_r, transform=ccrs.PlateCarree())
    cb = fig.colorbar(cf, orientation='horizontal', aspect=65, shrink=0.5, pad=0.05,
                      extendrect='True')
    cb.set_label('Relative Humidity', size='x-large')

    # Plot wind barbs
    ax.barbs(lon.values, lat.values, isent_data['u_wind'].isel(isentropic_level=level).values,
             isent_data['v_wind'].isel(isentropic_level=level).values, length=6,
             regrid_shape=20, transform=ccrs.PlateCarree())

    # Make some titles
    ax.set_title(f'{isentlevs[level]:~.0f} Isentropic Pressure (hPa), Wind (kt), '
                 'Relative Humidity (percent)', loc='left')
    add_timestamp(ax, isent_data['time'].values.astype('datetime64[ms]').astype('O'),
                  y=0.02, high_contrast=True)
    fig.tight_layout()




.. image:: /examples/images/sphx_glr_isentropic_example_001.png
    :alt: 296 K Isentropic Pressure (hPa), Wind (kt), Relative Humidity (percent)
    :class: sphx-glr-single-img





**Montgomery Streamfunction**

The Montgomery Streamfunction, :math:`{\psi} = gdz + CpT`, is often desired because its
gradient is proportional to the geostrophic wind in isentropic space. This can be easily
calculated with `mpcalc.montgomery_streamfunction`.


.. code-block:: default



    # Calculate Montgomery Streamfunction and scale by 10^-2 for plotting
    msf = mpcalc.montgomery_streamfunction(
        isent_data['Geopotential_height'],
        isent_data['temperature']
    ).values / 100.

    # Choose a level to plot, in this case 296 K
    level = 0

    fig = plt.figure(figsize=(17., 12.))
    add_metpy_logo(fig, 120, 250, size='large')
    ax = plt.subplot(111, projection=crs)
    ax.set_extent(*bounds, crs=ccrs.PlateCarree())
    ax.add_feature(cfeature.COASTLINE.with_scale('50m'), linewidth=0.75)
    ax.add_feature(cfeature.STATES.with_scale('50m'), linewidth=0.5)

    # Plot the surface
    clevmsf = np.arange(0, 4000, 5)
    cs = ax.contour(lon, lat, msf[level, :, :], clevmsf,
                    colors='k', linewidths=1.0, linestyles='solid', transform=ccrs.PlateCarree())
    cs.clabel(fontsize=10, inline=1, inline_spacing=7, fmt='%i', rightside_up=True,
              use_clabeltext=True)

    # Plot RH
    cf = ax.contourf(lon, lat, isent_data['Relative_humidity'].isel(isentropic_level=level),
                     range(10, 106, 5), cmap=plt.cm.gist_earth_r, transform=ccrs.PlateCarree())
    cb = fig.colorbar(cf, orientation='horizontal', aspect=65, shrink=0.5, pad=0.05,
                      extendrect='True')
    cb.set_label('Relative Humidity', size='x-large')

    # Plot wind barbs
    ax.barbs(lon.values, lat.values, isent_data['u_wind'].isel(isentropic_level=level).values,
             isent_data['v_wind'].isel(isentropic_level=level).values, length=6,
             regrid_shape=20, transform=ccrs.PlateCarree())

    # Make some titles
    ax.set_title(f'{isentlevs[level]:~.0f} Montgomery Streamfunction '
                 r'($10^{-2} m^2 s^{-2}$), Wind (kt), Relative Humidity (percent)', loc='left')
    add_timestamp(ax, isent_data['time'].values.astype('datetime64[ms]').astype('O'),
                  y=0.02, pretext='Valid: ', high_contrast=True)

    fig.tight_layout()
    plt.show()



.. image:: /examples/images/sphx_glr_isentropic_example_002.png
    :alt: 296 K Montgomery Streamfunction ($10^{-2} m^2 s^{-2}$), Wind (kt), Relative Humidity (percent)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /opt/hostedtoolcache/Python/3.8.6/x64/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:1478: UserWarning: No contour levels were found within the data range.
      result = matplotlib.axes.Axes.contour(self, *args, **kwargs)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  8.305 seconds)


.. _sphx_glr_download_examples_isentropic_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: isentropic_example.py <isentropic_example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: isentropic_example.ipynb <isentropic_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
